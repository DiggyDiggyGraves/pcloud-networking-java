apply from: rootProject.file('publishing.gradle')
apply from: rootProject.file('maven-pom.gradle')

apply plugin: 'com.jfrog.bintray'

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
def credentials = [:]
if (project.isCi) {
    credentials.bintrayUser = System.getenv("PCLOUD_BINTRAY_USER")
    credentials.bintrayKey = System.getenv("PCLOUD_BINTRAY_KEY")
    credentials.signingPassword = System.getenv("PCLOUD_BINTRAY_SIGN_KEY_PASSWORD")
} else {
    // Read user and token from `local.properties`
    project.rootProject.file('local.properties').withInputStream {stream ->
        Properties properties = new Properties()
        properties.load(new DataInputStream(stream))
        credentials.bintrayUser = properties.getProperty("bintray.user")
        credentials.bintrayKey = properties.getProperty("bintray.apikey")
        credentials.signingPassword = System.getenv("bintray.signingKey")
    }
}

if (credentials.isEmpty()) {
    throw new GradleException("Missing Bintray credentials.")
}

bintray {
    user = credentials.bintrayUser
    key = credentials.bintrayKey
    override = true
    configurations = ['archives']
    pkg {
        repo = project.libraryName
        name = project.artifactId
        desc = project.description
        websiteUrl = project.siteUrl
        vcsUrl = project.vcsUrl
        licenses = project.allLicenses
        userOrg = 'pcloud'
        publish = true
        publicDownloadNumbers = true
        version {
            desc = project.description
            gpg {
                sign = credentials.signingPassword != null
                passphrase = credentials.signingPassword
            }
        }
    }
}