apply from: rootProject.file('publishing.gradle')
apply from: rootProject.file('maven-pom.gradle')

apply plugin: 'com.jfrog.bintray'

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

def bintrayUser = properties.getProperty("bintray.user")
def bintrayKey = properties.getProperty("bintray.apikey")

if (bintrayUser == null) {
    bintrayUser = System.getenv("PCLOUD_BINTRAY_USER")
}

if (bintrayKey == null) {
    bintrayKey = System.getenv("PCLOUD_BINTRAY_KEY")
}

if (bintrayUser == null  || bintrayKey == null) {
    throw new GradleException("Missing bintray credentials.")
}

bintray {
    user = bintrayUser
    key = bintrayKey
    override = true
    configurations = ['archives']
    pkg {
        repo = project.libraryName
        name = project.artifactId
        desc = project.description
        websiteUrl = project.siteUrl
        vcsUrl = project.vcsUrl
        licenses = project.allLicenses
        userOrg = 'pcloud'
        publish = true
        publicDownloadNumbers = true
        version {
            desc = getProperty('description')
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}